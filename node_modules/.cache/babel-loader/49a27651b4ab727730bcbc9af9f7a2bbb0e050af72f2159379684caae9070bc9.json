{"ast":null,"code":"var _jsxFileName = \"/Users/amnaabdulrehman/Documents/GitHub/react-websocket-client/src/WebSocketClient.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './WebSocketClient.css'; // Import the CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketClient = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Create a new WebSocket connection\n    const ws = new WebSocket('ws://localhost:8080');\n\n    // Connection opened\n    ws.onopen = () => {\n      console.log('Connected to the WebSocket server.');\n      ws.send('Hello Server!');\n    };\n\n    // Listen for messages\n    ws.onmessage = event => {\n      console.log('Message from server:', event.data);\n      setMessages(prevMessages => [...prevMessages, event.data]);\n    };\n\n    // Handle errors\n    ws.onerror = event => {\n      console.error('WebSocket error:', event);\n    };\n\n    // Connection closed\n    ws.onclose = event => {\n      console.log('WebSocket connection closed:', event);\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"websocket-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"message-list\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSocketClient, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = WebSocketClient;\nexport default WebSocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebSocketClient\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WebSocketClient","_s","messages","setMessages","ws","WebSocket","onopen","console","log","send","onmessage","event","data","prevMessages","onerror","error","onclose","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","_c","$RefreshReg$"],"sources":["/Users/amnaabdulrehman/Documents/GitHub/react-websocket-client/src/WebSocketClient.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './WebSocketClient.css'; // Import the CSS file for styles\n\nconst WebSocketClient = () => {\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        // Create a new WebSocket connection\n        const ws = new WebSocket('ws://localhost:8080');\n\n        // Connection opened\n        ws.onopen = () => {\n            console.log('Connected to the WebSocket server.');\n            ws.send('Hello Server!');\n        };\n\n        // Listen for messages\n        ws.onmessage = (event) => {\n            console.log('Message from server:', event.data);\n            setMessages(prevMessages => [...prevMessages, event.data]);\n        };\n\n        // Handle errors\n        ws.onerror = (event) => {\n            console.error('WebSocket error:', event);\n        };\n\n        // Connection closed\n        ws.onclose = (event) => {\n            console.log('WebSocket connection closed:', event);\n        };\n\n        // Clean up the WebSocket connection when the component unmounts\n        return () => {\n            ws.close();\n        };\n    }, []);\n\n    return (\n        <div className=\"websocket-container\">\n            <h1>WebSocket Messages</h1>\n            <ul className=\"message-list\">\n                {messages.map((message, index) => (\n                    <li key={index}>{message}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default WebSocketClient;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;IAE/C;IACAD,EAAE,CAACE,MAAM,GAAG,MAAM;MACdC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDJ,EAAE,CAACK,IAAI,CAAC,eAAe,CAAC;IAC5B,CAAC;;IAED;IACAL,EAAE,CAACM,SAAS,GAAIC,KAAK,IAAK;MACtBJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,KAAK,CAACC,IAAI,CAAC;MAC/CT,WAAW,CAACU,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEF,KAAK,CAACC,IAAI,CAAC,CAAC;IAC9D,CAAC;;IAED;IACAR,EAAE,CAACU,OAAO,GAAIH,KAAK,IAAK;MACpBJ,OAAO,CAACQ,KAAK,CAAC,kBAAkB,EAAEJ,KAAK,CAAC;IAC5C,CAAC;;IAED;IACAP,EAAE,CAACY,OAAO,GAAIL,KAAK,IAAK;MACpBJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEG,KAAK,CAAC;IACtD,CAAC;;IAED;IACA,OAAO,MAAM;MACTP,EAAE,CAACa,KAAK,CAAC,CAAC;IACd,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIlB,OAAA;IAAKmB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCpB,OAAA;MAAAoB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BxB,OAAA;MAAImB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACvBjB,QAAQ,CAACsB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzB3B,OAAA;QAAAoB,QAAA,EAAiBM;MAAO,GAAfC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACtB,EAAA,CA7CID,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AA+CrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}