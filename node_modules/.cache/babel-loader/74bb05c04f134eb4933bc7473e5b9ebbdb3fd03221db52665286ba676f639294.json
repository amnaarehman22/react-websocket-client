{"ast":null,"code":"var _jsxFileName = \"/Users/amnaabdulrehman/Documents/GitHub/react-websocket-client/src/WebSocketClient.js\",\n  _s = $RefreshSig$();\n// src/WebSocketClient.js\nimport React, { useEffect, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketClient = () => {\n  _s();\n  const [sensorData, setSensorData] = useState(null); // Initialize with null or empty object\n\n  useEffect(() => {\n    const socket = socketIOClient('ws://localhost:8080'); // Replace with your WebSocket server URL\n\n    socket.on('sensorData', data => {\n      console.log('Received sensor data:', data);\n      setSensorData(data); // Update state with received data\n    });\n    return () => {\n      socket.disconnect(); // Clean up socket connection on component unmount\n    };\n  }, []);\n  if (!sensorData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this); // Handle initial loading state\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sensor ID: \", sensorData.sensor_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Coordinates: (\", sensorData.coordinates.x, \", \", sensorData.coordinates.y, \", \", sensorData.coordinates.z, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Timestamp: \", sensorData.timestamp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSocketClient, \"b5axGbR/lRweVIVqXNxgJ0XLyYk=\");\n_c = WebSocketClient;\nexport default WebSocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebSocketClient\");","map":{"version":3,"names":["React","useEffect","useState","socketIOClient","jsxDEV","_jsxDEV","WebSocketClient","_s","sensorData","setSensorData","socket","on","data","console","log","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","sensor_id","coordinates","x","y","z","timestamp","_c","$RefreshReg$"],"sources":["/Users/amnaabdulrehman/Documents/GitHub/react-websocket-client/src/WebSocketClient.js"],"sourcesContent":["// src/WebSocketClient.js\nimport React, { useEffect, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst WebSocketClient = () => {\n    const [sensorData, setSensorData] = useState(null); // Initialize with null or empty object\n\n    useEffect(() => {\n        const socket = socketIOClient('ws://localhost:8080'); // Replace with your WebSocket server URL\n\n        socket.on('sensorData', (data) => {\n            console.log('Received sensor data:', data);\n            setSensorData(data); // Update state with received data\n        });\n\n        return () => {\n            socket.disconnect(); // Clean up socket connection on component unmount\n        };\n    }, []);\n\n    if (!sensorData) {\n        return <div>Loading...</div>; // Handle initial loading state\n    }\n\n    return (\n        <div>\n            <h1>WebSocket Client</h1>\n            <div>\n                <p>Sensor ID: {sensorData.sensor_id}</p>\n                <p>Coordinates: ({sensorData.coordinates.x}, {sensorData.coordinates.y}, {sensorData.coordinates.z})</p>\n                <p>Timestamp: {sensorData.timestamp}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default WebSocketClient;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpDD,SAAS,CAAC,MAAM;IACZ,MAAMS,MAAM,GAAGP,cAAc,CAAC,qBAAqB,CAAC,CAAC,CAAC;;IAEtDO,MAAM,CAACC,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAK;MAC9BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,IAAI,CAAC;MAC1CH,aAAa,CAACG,IAAI,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC;IAEF,OAAO,MAAM;MACTF,MAAM,CAACK,UAAU,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACP,UAAU,EAAE;IACb,oBAAOH,OAAA;MAAAW,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,oBACIf,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBf,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAAW,QAAA,GAAG,aAAW,EAACR,UAAU,CAACa,SAAS;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCf,OAAA;QAAAW,QAAA,GAAG,gBAAc,EAACR,UAAU,CAACc,WAAW,CAACC,CAAC,EAAC,IAAE,EAACf,UAAU,CAACc,WAAW,CAACE,CAAC,EAAC,IAAE,EAAChB,UAAU,CAACc,WAAW,CAACG,CAAC,EAAC,GAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxGf,OAAA;QAAAW,QAAA,GAAG,aAAW,EAACR,UAAU,CAACkB,SAAS;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACb,EAAA,CA9BID,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AAgCrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}