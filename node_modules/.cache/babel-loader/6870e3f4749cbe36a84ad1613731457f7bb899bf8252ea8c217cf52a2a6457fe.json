{"ast":null,"code":"var _jsxFileName = \"/Users/amnaabdulrehman/Documents/GitHub/react-websocket-client/src/WebSocketClient.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketClient = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [ws, setWs] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  // Function to handle opening the WebSocket connection\n  const openConnection = useCallback(() => {\n    if (ws) {\n      console.warn('WebSocket connection already open.');\n      return;\n    }\n    const newWs = new WebSocket('ws://localhost:8080');\n    newWs.onopen = () => {\n      console.log('Connected to the WebSocket server.');\n      setIsConnected(true);\n    };\n    newWs.onmessage = event => {\n      console.log('Message from server:', event.data);\n      setMessages(prevMessages => [...prevMessages, event.data]);\n    };\n    newWs.onerror = event => {\n      console.error('WebSocket error:', event);\n    };\n    newWs.onclose = event => {\n      console.log('WebSocket connection closed:', event);\n      setIsConnected(false);\n    };\n    setWs(newWs);\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      newWs.close();\n      setWs(null);\n    };\n  }, [ws]);\n\n  // Function to handle closing the WebSocket connection\n  const closeConnection = useCallback(() => {\n    if (ws) {\n      ws.close();\n      setWs(null);\n      setIsConnected(false);\n    } else {\n      console.warn('No WebSocket connection to close.');\n    }\n  }, [ws]);\n\n  // Effect to manage WebSocket connection cleanup\n  useEffect(() => {\n    return () => {\n      if (ws) {\n        ws.close();\n        setWs(null);\n      }\n    };\n  }, [ws]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"websocket-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openConnection,\n        disabled: isConnected,\n        children: \"Open Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeConnection,\n        disabled: !isConnected,\n        children: \"Close Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"message-list\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSocketClient, \"pD86ReP69AKYlleXizPBwDUJiBc=\");\n_c = WebSocketClient;\nexport default WebSocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebSocketClient\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","jsxDEV","_jsxDEV","WebSocketClient","_s","messages","setMessages","ws","setWs","isConnected","setIsConnected","openConnection","console","warn","newWs","WebSocket","onopen","log","onmessage","event","data","prevMessages","onerror","error","onclose","close","closeConnection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","message","index","_c","$RefreshReg$"],"sources":["/Users/amnaabdulrehman/Documents/GitHub/react-websocket-client/src/WebSocketClient.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\n\nconst WebSocketClient = () => {\n    const [messages, setMessages] = useState([]);\n    const [ws, setWs] = useState(null);\n    const [isConnected, setIsConnected] = useState(false);\n\n    // Function to handle opening the WebSocket connection\n    const openConnection = useCallback(() => {\n        if (ws) {\n            console.warn('WebSocket connection already open.');\n            return;\n        }\n\n        const newWs = new WebSocket('ws://localhost:8080');\n\n        newWs.onopen = () => {\n            console.log('Connected to the WebSocket server.');\n            setIsConnected(true);\n        };\n\n        newWs.onmessage = (event) => {\n            console.log('Message from server:', event.data);\n            setMessages(prevMessages => [...prevMessages, event.data]);\n        };\n\n        newWs.onerror = (event) => {\n            console.error('WebSocket error:', event);\n        };\n\n        newWs.onclose = (event) => {\n            console.log('WebSocket connection closed:', event);\n            setIsConnected(false);\n        };\n\n        setWs(newWs);\n\n        // Clean up the WebSocket connection when the component unmounts\n        return () => {\n            newWs.close();\n            setWs(null);\n        };\n    }, [ws]);\n\n    // Function to handle closing the WebSocket connection\n    const closeConnection = useCallback(() => {\n        if (ws) {\n            ws.close();\n            setWs(null);\n            setIsConnected(false);\n        } else {\n            console.warn('No WebSocket connection to close.');\n        }\n    }, [ws]);\n\n    // Effect to manage WebSocket connection cleanup\n    useEffect(() => {\n        return () => {\n            if (ws) {\n                ws.close();\n                setWs(null);\n            }\n        };\n    }, [ws]);\n\n    return (\n        <div className=\"websocket-container\">\n            <h1>WebSocket Messages</h1>\n            <div className=\"button-container\">\n                <button onClick={openConnection} disabled={isConnected}>\n                    Open Connection\n                </button>\n                <button onClick={closeConnection} disabled={!isConnected}>\n                    Close Connection\n                </button>\n            </div>\n            <ul className=\"message-list\">\n                {messages.map((message, index) => (\n                    <li key={index}>{message}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default WebSocketClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}